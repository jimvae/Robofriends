[{"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/index.js":"1","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/reportWebVitals.js":"2","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/robots.js":"3","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/containers/App.js":"4","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/containers/ErrorBoundary.js":"5","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/components/CardList.js":"6","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/components/SearchBox.js":"7","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/components/Scroll.js":"8","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/components/Card.js":"9","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/redux/reducers.js":"10","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/redux/actions.js":"11","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/components/MutateButton.js":"12","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/redux/constants.js":"13"},{"size":1150,"mtime":1622221279397,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1621426231051,"results":"16","hashOfConfig":"15"},{"size":1161,"mtime":1621428981673,"results":"17","hashOfConfig":"15"},{"size":2622,"mtime":1622224367622,"results":"18","hashOfConfig":"15"},{"size":471,"mtime":1622221078854,"results":"19","hashOfConfig":"15"},{"size":455,"mtime":1622221055881,"results":"20","hashOfConfig":"15"},{"size":427,"mtime":1622224952422,"results":"21","hashOfConfig":"15"},{"size":231,"mtime":1622221055678,"results":"22","hashOfConfig":"15"},{"size":941,"mtime":1622221055939,"results":"23","hashOfConfig":"15"},{"size":1753,"mtime":1622224155931,"results":"24","hashOfConfig":"15"},{"size":1015,"mtime":1622224446804,"results":"25","hashOfConfig":"15"},{"size":261,"mtime":1622223504061,"results":"26","hashOfConfig":"15"},{"size":380,"mtime":1622221254983,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"3gfq5x",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/index.js",["58"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\n// ./ means it is in the same directory\nimport thunkMiddleware from 'redux-thunk';\n\nimport 'tachyons';\nimport App from './containers/App';\nimport { searchRobots, requestRobots, changeRobots } from './redux/reducers';\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots, changeRobots});\n// combine all the reducers\n\n// create the store from the reducer(search Robots)\n// you can add more middleware here (ordered by parameter)\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  // state is passed down to every single components of App\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// or \n// using fragments\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["59","60"],"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/reportWebVitals.js",[],["61","62"],"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/robots.js",[],"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/containers/App.js",["63","64"],"import React, { useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from './ErrorBoundary.js';\nimport MutateButton from '../components/MutateButton';\n\n// actions\nimport { setSearchField, requestRobots, changeRobots } from '../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nfunction App () {\n\n    const dispatch = useDispatch();\n\n    // the states\n\n    const { searchField } = useSelector(\n        (state) => state.searchRobots\n    );\n    \n    const { robots, isPending, error } = useSelector(\n        (state) => state.requestRobots\n    );\n\n    const { creatureType } = useSelector(\n        (state) => state.changeRobots\n    )\n\n    const getcreatureString = (creature) => {\n        switch (creature) {\n            case \"alien\":\n                return '?set=set2';\n            case \"robot\":\n                return '?set=set3';\n            case \"cat\":\n                return '?set=set4';\n            case \"human\":\n                return '?set=set5';\n            default:\n                return '';\n        }\n    } \n\n    const onSearchChange = (event) => {\n        dispatch(setSearchField(event.target.value));\n    }\n\n    const onRequestRobots = () => {\n        dispatch(requestRobots())\n    }\n\n    const onChangeRobots = () => {\n        dispatch(changeRobots());\n    }\n\n    // const randomize = (event) => {\n    //     console.log(event);\n    // }\n\n    // Replaces componentDidMount\n    useEffect(() => {\n        onRequestRobots()\n    }, [])\n\n\n    const filteredRobots = robots.filter(\n        robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        }\n    );\n\n    if (isPending) {\n        return <h1>Loading...</h1>\n    } else {\n        return (\n                <div className='tc'>\n                    <h1 className='f1'>{`${creatureType}Friends`}</h1>\n                    <MutateButton changeRobots={onChangeRobots} />\n                    <SearchBox searchChange={onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList \n                                robots={filteredRobots}\n                                creatureType={getcreatureString(creatureType)}/>\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n        );\n    }\n}\n\n// can name the parameters but can use this convention\nexport default App;\n\n// connect is a higher order function, takes in a function and returns a function","/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/containers/ErrorBoundary.js",[],"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/components/CardList.js",[],"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/components/SearchBox.js",[],"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/components/Scroll.js",[],"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/components/Card.js",[],"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/redux/reducers.js",[],"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/redux/actions.js",[],"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/components/MutateButton.js",[],"/Users/jimvincent/Repositories/LearningWebDev/robofriend/robofriends/src/redux/constants.js",[],{"ruleId":"65","severity":1,"message":"66","line":4,"column":20,"nodeType":"67","messageId":"68","endLine":4,"endColumn":27},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"65","severity":1,"message":"75","line":24,"column":32,"nodeType":"67","messageId":"68","endLine":24,"endColumn":37},{"ruleId":"76","severity":1,"message":"77","line":66,"column":8,"nodeType":"78","endLine":66,"endColumn":10,"suggestions":"79"},"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],"'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onRequestRobots'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [onRequestRobots]",{"range":"85","text":"86"},[1616,1618],"[onRequestRobots]"]